#!$(INSTALL)/bin/$(ARCH)/example

cd "$(INSTALL)"

## Register all support components
dbLoadDatabase("dbd/example.dbd")
example_registerRecordDeviceDriver(pdbbase)

# Scan the firewire bus for cameras
FDC_InitBus()

# Create a FirewireDCAM driver instance for one camera
# Max number of buffers (arg3):
#     The driver: 2
#     NDStdArrays: 3
#     NDROI: 9 (1 per ROI)
#     = 14 buffers in total.
# Max memory (arg4) in bytes: 1024x768 x 1 x 14 buffers = 11010048 (Need 3x this if in RGB mode)
# arg5 = colour mode (B+W)

FDC_Config("LAB2", 0x00B09D01007DE45A, 1, 14, 11010048, 0)

# Setup an NDStdArray plugin to read out the image over CA
NDStdArraysConfigure("ARR1", 10, 0, "LAB2", 0, -1)
# PortName, Frame Queue Size, Blocking Callbacks, NDArray Port, NDArray Address, Max Address
imgProConfigure("LAB2ImgPro", 1, 0, "LAB2", 0, 11010048)

dbLoadRecords("/dls_sw/work/R3.14.11/support/firewireDCAM/db/firewireDCAM.db", "P=LAB2:,R='',CAM=1, PORT=LAB2")
dbLoadRecords("/dls_sw/work/R3.14.11/support/firewireDCAM/db/firewireDCAM_feature.db", "P=LAB2:,R='',CAM=1, PORT=LAB2")

iocInit()

asynSetTraceMask("LAB2",0,0x11)
asynSetTraceMask("LAB2",1,0x11)
